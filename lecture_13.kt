/**
 * You can edit, run, and share this code. 
 * play.kotlinlang.org 
 */

// 스코프와 접근제한자
// 스코프(멤버들의 가용 범위를 지정해둔 단위)란 변수나 함수, 클래스 같은 "멤버"들을 서로 공유하여 사용할 수 있는 범위를 정의
//  - 외부에서는 내부의 멤버를 '참조연산자'로만 참조가 가능하다.
//  - 동일 스코프 내에서는 멤버들을 공유할 수 있다.
// 		패키지를 선언하지 않았으므로 모두 동일한 스코프에 포함이 되는 것이다.
// 		그러므로 변수 a는 클래스 B나 main 함수에 속하지는 않지만 사용할 수 있는 것이다.
// 	- 하위 스코프에서는 상위 스코프의 멤버를 재정의 할 수 있다.
// 접근제한자(private, public, internal)란 스코프 외부에서 스코프 내부에 접근할 때 개발자가 제한할 수 있는 기능
//  - 패키지 스코드에서
//  	public: 기본 값으로 어떤 패키지에서도 접근 가능
//  	internal: 같은 모듈 내에서만 접근 가능
//  	private: 같은 파일 내에서만 접근 가능
//  	protected는 사용하지 않음
//  - 패키지 스코드에서
//  	public: 기본 값으로 클래스 외부에서 늘 접근 가능
//  	private: 클래스 내부에서만 접근 가능
//  	protected: 클래스 자신과 상속받은 클래스 내에서 접근 가능
//  	internal는 사용하지 않음
val a = "패키지 스코프"

class B {
    var a = "클래스 스코프"
    fun print() {
        println(a)
    }
}

fun main() {
    var a = "함수 스코프"
    println(a)
    B().print()
}

